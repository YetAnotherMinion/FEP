language: cpp
#run on latest container based infrastructure
sudo: false

branches:
  - master

compiler:
  - clang
  - gcc

#workaround for container based packages
addons:
  apt:
    packages:
      - gfortran        # used by all
      - openmpi-bin     # -+
      - openmpi-common  #  | all for openmpi
      - libopenmpi-dev  # -+
      - mpich2          # -+
      - libmpich2-3     #  | all for mpich2
      - libmpich2-dev   # -+

env:
  - MPI=openmpi
  - MPI=mpich2

before_install:
  - export MAIN_DIR=$PWD

install:
  - echo $PWD
  - git clone -b maint https://bitbucket.org/petsc/petsc /tmp/petsc
  - git clone https://github.com/YetAnotherMinion/googletest.git /tmp/googletest
  - git clone https://github.com/SCOREC/core.git /tmp/core
  - mkdir /tmp/packages && cd /tmp/packages
  - wget http://ftp.mcs.anl.gov/pub/petsc/externalpackages/fblaslapack-3.4.2.tar.gz  #download needed packages
  - wget http://crd.lbl.gov/~xiaoye/SuperLU/superlu_4.3.tar.gz
  - cp $MAIN_DIR/install_petsc.sh /tmp/petsc && cd /tmp/petsc
  - ./install_petsc.sh /tmp/packages/petsc-3.6.1 /tmp/petsc /tmp/packages
  - make PETSC_DIR=/tmp/petsc PETSC_ARCH=linux-mpich all
  - make PETSC_DIR=/tmp/petsc PETSC_ARCH=linux-mpich install # install the libraries
  - make PETSC_DIR=/tmp/packages/petsc-3.6.1 PETSC_ARCH="" test # test the installed library



#create the bin directories
before_script:
  - mkdir a1/obj a2/obj a3/obj a4/obj 
  - mkdir a1/bin a2/bin a3/bin a4/bin
  - mkdir a1/lib a2/lib a3/lib a4/lib
  - MPIEXEC='mpiexec'
  - test $MPI == mpich2 && MPIEXEC='mpiexec -launcher fork' || true

script: 
  - echo $PWD
  - make -C a1
  - make -C a2
  - make -C a3
  - make -C a4

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/c42da23dc9f9ae61b63d
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always



