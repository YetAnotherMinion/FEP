language: cpp
#run on latest container based infrastructure
sudo: false

branches:
  - master

compiler:
  - clang
  - gcc

cache:
  - /tmp/packages

#workaround for container based packages
addons:
  apt:
    packages:
      - gfortran        # used by all
      - openmpi-bin     # -+
      - openmpi-common  #  | all for openmpi
      - libopenmpi-dev  # -+
      - mpich2          # -+
      - libmpich2-3     #  | all for mpich2
      - libmpich2-dev   # -+
      - cmake

env:
  - MPI=openmpi
# right now multiple versions of mpi do not work
#  - MPI=mpich2

before_install:
  - export MAIN_DIR=$PWD
  - mkdir a1/obj a2/obj a3/obj a4/obj #create all needed dirs before any other steps 
  - mkdir a1/bin a2/bin a3/bin a4/bin
  - mkdir lib #use one folder at project root for lib

install:
  - mpicc --version
  - git clone -b maint https://bitbucket.org/petsc/petsc /tmp/petsc
  - git clone https://github.com/YetAnotherMinion/googletest.git /tmp/googletest
  - git clone https://github.com/SCOREC/core.git /tmp/core
  - git clone https://github.com/SCOREC/fep.git /tmp/test_meshes #get the test meshes
  - mkdir /tmp/packages && cd /tmp/packages
  - wget http://ftp.mcs.anl.gov/pub/petsc/externalpackages/fblaslapack-3.4.2.tar.gz  #download needed packages
  - wget http://crd.lbl.gov/~xiaoye/SuperLU/superlu_4.3.tar.gz
  - wget https://www.scorec.rpi.edu/pumi/pumi_test_meshes.tar.gz #test meshes for PUMI
  - tar xzf pumi_test_meshes.tar.gz -C /tmp/core/
  - cd /tmp/core && mkdir build && cd build
  - cp $MAIN_DIR/custom_pumi_configure.sh /tmp/core/custom_pumi_configure.sh
  - source ../custom_pumi_configure.sh $MAIN_DIR/lib/pumi /tmp/core/meshes
  - make #use max num threads to build
  - make install -k
  - ctest -W
  - cp $MAIN_DIR/install_petsc.sh /tmp/petsc && cd /tmp/petsc
  - ./install_petsc.sh /tmp/packages/petsc-3.6.1 /tmp/petsc /tmp/packages
  - make PETSC_DIR=/tmp/petsc PETSC_ARCH=linux-mpich all
  - make PETSC_DIR=/tmp/petsc PETSC_ARCH=linux-mpich install # install the libraries
  - make PETSC_DIR=/tmp/packages/petsc-3.6.1 PETSC_ARCH="" test # test the installed library
  - cd $MAIN_DIR
  #create the bin directories
  - touch travis_config.mk
  - echo -e 'ifeq ($(CC), gcc)\n\tMPIFLAGS+=--std=c++0x -Wno-long-long\nelse\n\tMPIFLAGS+=-Wno-c++11-long-long\nendif\nPETSC_DIR=/tmp/packages/petsc-3.6.1\nLDIR=$(MAIN_DIR)/lib\nPUMI_DIR=$(LDIR)/pumi\nGTEST_DIR=/tmp/googletest' > travis_config.mk
  - cat travis_config.mk | tee a1/config.mk a2/config.mk a3/config.mk a4/config.mk
  - MPIEXEC='mpiexec'
  - test $MPI == mpich2 && MPIEXEC='mpiexec -launcher fork' || true
  - mpiexec --version
  - make -C a1
  - make -C a2
  - make -C a3
  - make -C a4

before_script:

script: 
  - echo "run a script"
  - mpirun /a4/bin/a4

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/c42da23dc9f9ae61b63d
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always



